<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="labelControl1.ImageOptions.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADAAAAAwCAYAAABXAvmHAAAABGdBTUEAALGPC/xhBQAABERJREFUaEPt
        l1lsG1UUhl0BEYhHBC8gHhAviDfgoWGREs+M7fGSAG1SYrvGsscONFSVRUooCHVQK7CgykJoixToAmoR
        SdQ2jkjygIgrpEZZBBJREKULZQthMQqEgJ22Ptzrngk34+t0VNkZg/xJvzS+5/xz/zOesTWWChUqVPhv
        UVtbu4Fo1Gq1LhKBIAgnsFT+kLBdNDRHM0RBbCtPyFVv1IXOSRKtWSLt2/Bje/lBAp7SQgtEsSclSLwq
        w/wxN0y/7cyKonCJDDCC7eVFTU3N9YJgvfy0V4K+XTL83OsGGPasUP9uR9YhWX9BS0E6xzNtnRMZ0Ktr
        MrMTW4qPzWa77VGXcFEfmtXigAecdusSWlZFP0RJw1OeD9vv3uARuME10QFcdiGLlquiDaGFJ8ezzFA/
        5JqKxdy7tpsPv+TgBtdEBziqOubRYggaFg/p8aA2QNdEJoHLxYOEnNGHztOI5zi2G4IdoGM8oy4PUIpb
        igQM5wVeqSyMuB7BdkOwA3SOp93aAB3jaRcuFw8AyzoSskcX+t/ww+7t2Loq1XL/kWq5D4zoQWf/QbQV
        D0gIzXDiIYAhJ8CH5Lk4tn4JRupqsXxV7m3orVov98VJwJQ+MKMU7aG9aCsewUhjpOPZhyGz7zpYeLMK
        1K3ikuiN2LFckM0tySP+liRci3wtyaJ8E+tkX9T2Yvv+M5JXgfgrrdnYc9uy9Fh948CU3a+sev83qDNV
        /pbROBkkxQvJ05Xe0Tj14mmuDdmn3CE1KaM0bPuhvh937z8M51NpOP3TAuzYsxf2HPzgS1ojGrP7o/eh
        jQt5Vh4jz8ys7hlC1anYVjysgaduJ8EuYEB4/Z2jJ7/74zKwao1354ZDXRS9Sj3aV2BrCnvUtkB6/nj9
        2oSnkPv7YyYcbI69cEo/QL2y7XO2h+hP6YnQA3iKHNUNsZvI+jla3xgKQaKzcQpLpUNoCjuYUDnZfJE5
        Nvy5X9N/kfW0vo9oVgxE78RTWWxeRWXrdYFQEkulQ/Ip77Gbapr46vtvtAEGTk59xutBTdYEgzeK3tBd
        5Phvbd3uUy6Jm5R7cJvSQa7aWW1TVvveH/xEG2BH+1vs/c9TD3kmBtk1ZyC8F7coLWSz5avGKtT28vIA
        jzfHPuX1FJLDrywIgcAtuEVp4QWgkgPNX9PwF37LLJHPi/q65I10569dkdgU2YqnLz28AJqmv03NDY9N
        6399cqJe0RvelVfzKV/cH43ekDv5WpAXgNGhxEdjavcB7v2PduKPtLHr9FcNS2sDu7lez6ivJRu2tE7y
        amg3H144Ta7gltPkP+F3Xg3t5sMLZ0RoNx9eOCNCu/nwwhkR2s2HF86I0G4+vHBGhHbzGevZCJvCIW7I
        1YR286EvGgsD9dCx08cNWkhoNx/2jYkXtJDQbj4w5PaQ8Ln3V17QQkJ7eQBD8q1kgF5e0EJCa4UKFSr8
        77FY/gEckkthQpPR3gAAAABJRU5ErkJggg==
</value>
  </data>
</root>